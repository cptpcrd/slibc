task:
  name: FreeBSD $FREEBSD_VERSION ($TOOLCHAIN)

  freebsd_instance:
    cpu: 1
    image_family: $FREEBSD_IMAGE

  matrix:
    - env:
        FREEBSD_VERSION: 11.4
        FREEBSD_IMAGE: freebsd-11-4
    - env:
        FREEBSD_VERSION: 12.2
        FREEBSD_IMAGE: freebsd-12-2
    - env:
        FREEBSD_VERSION: 12.2 STABLE
        FREEBSD_IMAGE: freebsd-12-2-snap
    # - env:
    #     FREEBSD_VERSION: 13.0
    #     FREEBSD_IMAGE: freebsd-13-0-snap

  matrix:
    - env:
        TOOLCHAIN: stable
    - env:
        TOOLCHAIN: beta
    - env:
        TOOLCHAIN: nightly

  allow_failures: $TOOLCHAIN == 'nightly'

  env:
    RUST_BACKTRACE: '1'
    CODECOV_TOKEN: ENCRYPTED[5bf67347303dfdc8671ccfa9489cae774438a8c7cb3a7c04cca88db4b3a8a49fe9a900d3558483a2bb8f3887baaa864d]
    RUSTFLAGS: -D warnings

  install_script:
    - pkg install -y curl kcov bash
    - curl -sSf https://sh.rustup.rs -o rustup.sh
    - sh rustup.sh -y --profile default --default-toolchain $TOOLCHAIN
  build_script:
    - . $HOME/.cargo/env
    - cargo build
  std_test_script:
    - . $HOME/.cargo/env
    - cargo clean
    - cargo test
    - |
      mkdir -p coverage-std
      for f in target/debug/deps/*; do
        if [ -x "$f" ]; then
          echo
          echo "=== $f ==="
          echo
          kcov --exclude-pattern=/.cargo,/.rustup,/usr/lib --verify coverage-std "$f"
        fi
      done
  alloc_test_script:
    - . $HOME/.cargo/env
    - cargo clean
    - cargo test --no-default-features --features alloc
    - |
      mkdir -p coverage-alloc
      for f in target/debug/deps/*; do
        if [ -x "$f" ]; then
          echo
          echo "=== $f ==="
          echo
          kcov --exclude-pattern=/.cargo,/.rustup,/usr/lib --verify coverage-alloc "$f"
        fi
      done
  no_std_test_script:
    - . $HOME/.cargo/env
    - cargo clean
    - cargo test --no-default-features
    - |
      mkdir -p coverage-no-std
      for f in target/debug/deps/*; do
        if [ -x "$f" ]; then
          echo
          echo "=== $f ==="
          echo
          kcov --exclude-pattern=/.cargo,/.rustup,/usr/lib --verify coverage-no-std "$f"
        fi
      done
  coverage_collect_upload_script:
    - kcov --merge coverage-merged/ coverage-std/ coverage-alloc/ coverage-no-std/
    - OS="$FREEBSD_IMAGE" bash <(curl -s https://codecov.io/bash) -e OS,TOOLCHAIN -n "$FREEBSD_IMAGE-$TOOLCHAIN" -Z -f coverage-merged/kcov-merged/cobertura.xml
